{"version":3,"sources":["muchtodo.js","index.js"],"names":["Explainer","pStyle","padding","lineHeight","fontSize","react_default","a","createElement","style","margin","height","width","display","justifyContent","alignItems","src","alt","target","rel","href","MuchToDo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getItem","bind","assertThisInitialized","addItem","deleteItem","state","current","list","item","id","e","getCurrent","value","setState","key","localStorage","hasOwnProperty","JSON","parse","defineProperty","loadListFromLocalStorage","window","addEventListener","saveStateToLocalStorage","newItem","Math","random","toConsumableArray","push","setItem","stringify","removeEventListener","newList","filter","listItem","_this2","className","minHeight","aria-label","map","onClick","marginTop","htmlFor","autoFocus","onChange","type","muchtodo_Explainer","React","Component","ReactDOM","render","muchtodo","document","getElementById"],"mappings":"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","file":"static/js/main.24735e34.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n \r\nconst Explainer = () => {\r\n  const pStyle = {\r\n    padding: \"5px\",\r\n    lineHeight: \"200%\",\r\n    fontSize: \"12px\"\r\n  }\r\n  return (\r\n    <details  style={{\r\n      margin: \"5px\",\r\n      height: \"\",\r\n      width: \" \",\r\n      display: \"\",\r\n      justifyContent: \"\",\r\n      alignItems: \"\"\r\n    }}>\r\n      <h3>The Tech</h3>\r\n        <p style={pStyle}>\r\n          This todo list is a create-react-app thingie, made of just two components. It keeps the todo items in state, storing them in localStorage when leaving/refreshing, syncing upon return.\r\n        </p>\r\n        <img src=\"../resources/computer-5.png\" alt=\"groovy old computer\"></img>\r\n        <p style={pStyle}>\r\n          You're probably more interested in the rad Windows 98 styling, right? That is courtesy of the very cool <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://jdan.github.io/98.css/\">98.css library</a>, which lets us party like it's 1998. The icons are from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://win98icons.alexmeub.com/\">this guy's</a> site.\r\n        </p>\r\n    </details>\r\n  )\r\n}\r\nclass MuchToDo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getItem = this.getItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.state = {\r\n            current: \"\",\r\n            list: [{item: \"nothing to do!\", id: \"default\"}]   \r\n        }\r\n    }\r\n    getItem(e) {\r\n        const getCurrent = e.target.value;\r\n        this.setState({current : getCurrent})\r\n    }\r\n    loadListFromLocalStorage() {\r\n      for (let key in this.state) {  //iterates through keys in state\r\n        if (localStorage.hasOwnProperty(key)) { //if localStorage has the key\r\n          let value = localStorage.getItem(key); //gets value\r\n          try {\r\n            value = JSON.parse(value);    // turns it into a string\r\n            this.setState({[key]: value}); //updates state\r\n          } catch(e) {\r\n            this.setState({[key]: value}); //if it didn't work, try again!\r\n          }\r\n        }\r\n      }\r\n    }\r\n    componentDidMount() {\r\n      this.loadListFromLocalStorage(); //syncs state with localStorage on refresh=reload\r\n      window.addEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this)); //add eventListener to save state when user leaves/refreshes page\r\n    }\r\n    addItem(e) {\r\n      if (this.state.current) {  //if state has a \"current\" item\r\n        const newItem = {item: this.state.current, id: \"TD\" + Math.random()};\r\n        const list = [...this.state.list]; //make a copy of the list in state\r\n        list.push(newItem); //add new item to list\r\n        \r\n        this.setState({list, current: \"\"}); //set state to new list\r\n      }\r\n    }\r\n    saveStateToLocalStorage() {\r\n      const list = [...this.state.list];\r\n      localStorage.setItem(\"list\", JSON.stringify(list));\r\n      localStorage.setItem(\"current\", \"\");\r\n    }\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"beforeunload\", this.saveStateToLocalStorage.bind(this));\r\n      this.saveStateToLocalStorage();\r\n    }\r\n    deleteItem(id) {\r\n      const list = [...this.state.list]; //make a copy of list\r\n      const newList = list.filter(listItem => listItem.id !==id); //filter out deleted item\r\n      this.setState( {list: newList});\r\n    }\r\n    render(){\r\n         \r\n        return (\r\n            <div style={{\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}>\r\n            <div className=\"window\" style={{\r\n                width: \"500px\",\r\n                minHeight: \"150px\"\r\n            }}>\r\n            <div className=\"title-bar\">\r\n              <div className=\"title-bar-text\">Much To Do!</div>\r\n              <div className=\"title-bar-controls\">\r\n                <button aria-label=\"Minimize\"></button>\r\n                <button aria-label=\"Maximize\"></button>\r\n                <button aria-label=\"Close\"></button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"window-body\">\r\n              <p>Click Item to Remove When the Deed is Done</p>\r\n        \r\n              {this.state.list.map( listItem => \r\n                <li key={listItem.item}\r\n                    style={{\r\n                      padding: \"5px\"\r\n                    }}\r\n                  onClick={() => this.deleteItem(listItem.id)}\r\n                  >{listItem.item}\r\n                </li>)}\r\n\r\n              <div className=\"field-row\" style={{marginTop: \"15px\"}}>\r\n                <label htmlFor=\"addItem\">Add Item</label>\r\n                <input autoFocus onChange={this.getItem} id=\"addItem\" type=\"text\"  value={this.state.current}/>\r\n                <button onClick={this.addItem}>Add Item</button>\r\n                </div>\r\n              \r\n              </div>\r\n              <Explainer />\r\n            </div>\r\n            \r\n          </div>\r\n        )\r\n      };\r\n}\r\n\r\n \r\nexport default MuchToDo;\r\n\r\n ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MuchToDo from \"./muchtodo\";\r\n\r\n\r\nReactDOM.render(<MuchToDo />, document.getElementById(\"root\"));\r\n\r\n \r\n"],"sourceRoot":""}